syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_get_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
 
option go_package = "github.com/dubass83/simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank Project";
    version: "1.1";
    contact: {
      name: "Dubass83";
      url: "https://github.com/dubass83/simplebank";
      email: "makssych@example.com";
    };
    // license: {
    //   name: "BSD 3-Clause License";
    //   url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    // };
    // extensions: {
    //   key: "x-something-something";
    //   value {string_value: "yadda"}
    // }
  };
};

service SimpleBank {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to create a new user";
          summary: "Create User";
        };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Create access and refresh tokens";
          summary: "Login User";
        };
    }
    rpc GetUser (GetUserRequest) returns (GetUserResponse){
      option (google.api.http) = {
          get: "/v1/get_user/{username}"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Get user if it exist";
        summary: "Get User";
      };
  }
}