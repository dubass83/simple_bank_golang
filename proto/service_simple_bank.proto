syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_get_user.proto";
import "rpc_create_account.proto";
import "rpc_get_account.proto";
import "rpc_list_accounts.proto";
import "rpc_delete_account.proto";
import "rpc_create_transfer_tx.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
 
option go_package = "github.com/dubass83/simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank Project";
    version: "1.6";
    contact: {
      name: "Dubass83";
      url: "https://github.com/dubass83/simplebank";
      email: "makssych@example.com";
    };
    // license: {
    //   name: "BSD 3-Clause License";
    //   url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    // };
    // extensions: {
    //   key: "x-something-something";
    //   value {string_value: "yadda"}
    // }
  };
};

service SimpleBank {
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
      option (google.api.http) = {
          post: "/v1/create_user"
          body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to create a new user";
        summary: "Create User";
      };
  }
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
    option (google.api.http) = {
        patch: "/v1/update_user"
        body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update the user";
      summary: "Update User";
    };
}
  rpc LoginUser (LoginUserRequest) returns (LoginUserResponse){
      option (google.api.http) = {
        post: "/v1/login_user"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Create access and refresh tokens";
        summary: "Login User";
      };
  }
  rpc GetUser (GetUserRequest) returns (GetUserResponse){
    option (google.api.http) = {
        get: "/v1/get_user/{username}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Get user if it exist";
      summary: "Get User";
    };
  }
  rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse){
    option (google.api.http) = {
      post: "/v1/create_account"
      body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Create user account with curency param sending at the body request (UAH|USD|EUR)";
    summary: "Create user account";
  };
  }
  rpc GetAccount (GetAccountRequest) returns (GetAccountResponse){
    option (google.api.http) = {
      get: "/v1/get_account/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Get user account from url path param";
    summary: "Get user account";
  };
  }
  rpc ListAccounts (ListAccountsRequest) returns (ListAccountsResponse){
    option (google.api.http) = {
      post: "/v1/list_accounts"
      body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Return list of the user accounts with pagination";
    summary: "Return list user accounts";
  };
  }
  rpc DeleteAccount (DeleteAccountRequest) returns (DeleteAccountResponse){
    option (google.api.http) = {
      delete: "/v1/delete_account/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Delete user account by id";
    summary: "Delete user account";
  };
  }
  rpc CreateTransfer (CreateTransferTxRequest) returns (CreateTransferTxResponse){
    option (google.api.http) = {
      post: "/v1/create_transfer_tx"
      body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Create money transfer transaction from one account to another";
    summary: "Create money transfer transaction";
  };
  }
}
